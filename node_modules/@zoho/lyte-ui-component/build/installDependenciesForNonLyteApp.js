//ignorei18n_start
// Required Modules
const path = require('path');
const fs = require('fs');
const child_process = require('child_process');
const logger = require('./logger.js');
// Global Variables
const spawn = child_process.spawn;
const basePath = process.env.INIT_CWD;
const ZOHO_REGISTRY = 'ht' + 'tp://integ-docker.csez.zohocorpin.com:4873';
const GLOBAL_REGISTRY = 'ht' + 'tps://registry.npmjs.org';
const dependenciesToInstall = [
  '@zoho/lyte-cli@3.3.1',
  '@zoho/lyte@3.1.2'
];
const getCmdBasedOnOs = function (cmd) {
  switch (cmd) {
    case `npm`: {
      if (process.platform === `win32`) {
        return `npm.cmd`;
      }
    }
  }
  // for mac, ubuntu -> npm will work
  return cmd;
}

// Main Function
logger.info(`${basePath} : this is the basePath used in preinstall hook`)
const buildJsPath = path.join(basePath, `/build/build.js`);
const isBuildFileExists = fs.existsSync(buildJsPath);
if (isBuildFileExists) {
  logger.highlight(`${buildJsPath} - Lyte Configuration File found. Skipping dependency installation process`);
} else {
  logger.highlight(`Found a Non-Lyte Application. Loading Dependencies, Please wait...`);

  const argsOfCommand = [].concat(`install`, dependenciesToInstall, `--registry ${ZOHO_REGISTRY}`);
  const rootCommand = getCmdBasedOnOs(`npm`);

  const instanceOfSpawn = spawn(rootCommand, argsOfCommand, { cwd: process.cwd() });
  instanceOfSpawn.stdout.on(`data`, dataStream => logger.success(dataStream.toString()))
  instanceOfSpawn.stderr.on(`data`, errorStream => logger.error(errorStream.toString()))
}
//ignorei18n_end