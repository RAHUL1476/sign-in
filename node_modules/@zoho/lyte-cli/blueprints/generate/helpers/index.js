"use strict";
require = global.require;
var utils = require("@zoho/lyte-cli-utils"),
	fileManipulation = utils.fileManipulation,
	folders = utils.commonCliUtils,
	path = require("path"),
	filePath;
module.exports = {
	description :"helpers",
	validateEntityName : function(options) {
		if(!folders.validateHelperName(options.cliArgs[2])) {
			throw new Error("Helper name should not contain hyphen and characters of arithmetic and unary operator ");
		} 
		return true;
	},
	fileMapTokens :function(options)	{
		return {
			__demo__ : options.cliArgs[2]
		}
	},

	locals :function(options)  {
		return  {
			id : options.cliArgs[2]
		}
	},	
	
	beforeInstall : function(options) {
		if(!folders.checkForAlreadyExistence(options,'helpers')) {
			if(options.d == '.') {
				options.d = undefined
			}
		} else {
			this.reject(new Error("helpers named "+options.cliArgs[2]+" already registered. Helpers with same name already exists in the src folder of the helpers"))			
		}
	},

	beforeUninstall : function(options){
		var subFolder;
		subFolder = (options.d && options.d != '.') ? options.d :'';
		filePath = path.join(options.folders.src["helpers"],subFolder,options.cliArgs[2]+'.js')	
		if(!fileManipulation.fileExist(filePath)){
			this.reject(new Error("helpers named "+filePath+" doesn't exists"));		
		}
	},

	uninstall : function(options) {
		var permitFlag =true;
		fileManipulation.removeSync(filePath,permitFlag);
		options.log.user({color : 'green', msg : "Removed File : "+path.relative(options.root,filePath)});
		if(fileManipulation.fileExist(options.logPath)) {
			options.log.system("Removed File : "+path.relative(options.root,filePath)+'\n');
		}
		folders.removeEmptyFolder(filePath,"helpers",options);
	}
}

