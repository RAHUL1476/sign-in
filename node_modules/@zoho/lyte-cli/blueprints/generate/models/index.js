"use strict";
require = global.require
var utils = require("@zoho/lyte-cli-utils"),
	fileManipulation = utils.fileManipulation,
	folders = utils.commonCliUtils,
	path = require("path"),
	subFolder,
	filePath;
module.exports ={
	description :"models",
	fileMapTokens :function(options)	{
		return {
			__demo__ : options.cliArgs[2]
		}
	},
	
	locals :function(options,to)  {
		return  {
			id : options.cliArgs[2]
		}
	},
	
	beforeInstall : function(options) {
		if(!folders.checkForAlreadyExistence(options,'models')) {
			if(options.d == '.') {
				options.d = undefined
			}
		} else {
			this.reject(new Error("models named "+options.cliArgs[2]+" already registered. models with same name already exists in the src folder of the models"))
		}
		
	},

	beforeUninstall : function(options) {	
		subFolder = (options.d && options.d != '.') ? options.d :'';
		filePath = path.join(options.folders.src['models'],subFolder,options.cliArgs[2]+'.js');	
		if(!fileManipulation.fileExist(filePath)){
			this.reject(new Error("models named "+path.relative(options.root,filePath)+" doesn't exist"))		
		}
	},

	uninstall : function(options) {			
		var folder = ["models","adapters","serializers"],
			srcFolders = options.folders.src,
			permitFlag = true;
		let removeTheFile = function(filePath) {
			fileManipulation.removeSync(filePath,permitFlag);
			options.log.user({color : 'green', msg : "Removed File : "+path.relative(options.root,filePath)});
			if(fileManipulation.fileExist(options.logPath)) {
				options.log.system("Removed File : "+path.relative(options.root,filePath)+'\n');
			}
		};
		var secondArgs = options.cliArgs[2];
		var filePath;
		if(secondArgs == "application") {
			filePath = path.join(srcFolders.models,subFolder,secondArgs+'.js');
			removeTheFile(filePath);
		} else {
			for(var i = 0;i < folder.length;i++) {
				filePath = path.join(srcFolders[folder[i]],subFolder,secondArgs+'.js');
				if(fileManipulation.fileExist(filePath)) {
					removeTheFile(filePath);									
				}
				folders.removeEmptyFolder(filePath,folder[i],options);
			}
			

		}	
	}
}
