#!/usr/bin/env node
process.title = 'lyte';
var fs = require("fs");
var path = require("path");
var cliArgs = process.argv.slice(2);
var currentNodeVersion = process.versions.node;
var semver = currentNodeVersion.split('.');
var major = semver[0];
var minor = semver[1];
var cli;
if(major <= 12 && minor < 4 || major < 12) {
  console.error(
    'You are running with the node version ' +
      currentNodeVersion +
      '.\n' +
      'Lyte-cli requires node version 12.4.0 or higher. \n' +
      'Please update your node version.'
  );
  process.exit(2);
}

let getParams = function() {
  let hyphen, 
      nextCliArgs,
      param;
  for(let argLen = cliArgs.length,i = 0;i < argLen;) {
      param = cliArgs[i];
      if(param && ((param.indexOf('--') == 0) || (hyphen = param.indexOf('-') == 0))) {
          param = param.substring(hyphen ? 1 : 2,param.length);
          
            if(param.indexOf('=') != -1) {
                let split = param.split('=');
                let propertyVal = split[1];
                if(propertyVal == "true" || propertyVal == "false") {
                  propertyVal = JSON.parse(propertyVal);
                } 
                options[split[0]] = propertyVal;
            } else if((nextCliArgs = cliArgs[i+1]) && (nextCliArgs.indexOf('--') != 0 && nextCliArgs.indexOf('-') != 0)) {
                options[param] = cliArgs[i+1];
                i++;
            } else {
                options[param] = true;
            }
          
      }
      i++;
      hyphen=false;
  }
}
let returnGlobalCli =  function() {
  options.cliRoot = path.join(__dirname,"..");
  cli = require('../lib/cli/cli');
}

let options = {
  fromCommand : true,
  root : process.cwd(),
  cliArgs :  cliArgs,
  buildVersion : 1
};
getParams();
if(options.globalCli) {
  returnGlobalCli();
} else {
  var root  = process.cwd();
  let projectLocalCli = path.join(root,"node_modules","@zoho","lyte-cli");
  if(fs.existsSync(projectLocalCli)){
    cli = require(path.join(projectLocalCli,"lib","cli","cli"));
    options.cliRoot = projectLocalCli;
  } else {
    // var packageJSONPath = path.join(root,"package.json");
    // var errorMsg = function() {
    //   console.log("\x1b[31mLyte-cli version mentioned in the package.json not found in the global lyte-cli location. To install ,run npm install from the application folder\x1b[0m");
    //   process.exit(2);
    // }
    // if(fs.existsSync(packageJSONPath)) {
    //   var packageJSONContent = JSON.parse(fs.readFileSync(packageJSONPath,'utf-8'));
    //   var lyteCliVersion = packageJSONContent.resolution || {};
    //   if(options.production) {
    //     returnGlobalCli();
    //   } else {
    //     var locCliVersion = lyteCliVersion["lyte-cli"]
    //     if(locCliVersion) {
    //       var homeDir = process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];
    //       let globalCli = path.join(homeDir,".lyte","lyte-cli@"+locCliVersion,"node_modules");
    //       if(fs.existsSync(globalCli)){
    //         projectLocalCli = path.join(globalCli,"lyte-cli");
    //         options.cliRoot = projectLocalCli;
    //         cli = require(projectLocalCli,"lib","cli","cli");
    //       } else {   
    //         errorMsg();
    //       }
    //     } else {
    //       if(packageJSONContent["lyte-cli"]) {
    //         errorMsg();
    //       } else {
    //         returnGlobalCli();
    //       }
    //     }
    //   }
    // } else {
      returnGlobalCli();
    //}
  }
}
cli(options);
